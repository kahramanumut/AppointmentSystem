// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RandevuTakip.DAL.Concrete.EfCore;

namespace RandevuTakip.WebApp.Migrations.AppointmentDb
{
    [DbContext(typeof(AppointmentDbContext))]
    [Migration("20181106091154_sdfs")]
    partial class sdfs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RandevuTakip.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("DoctorId");

                    b.Property<int?>("PatientId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("UserGuidId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("tbl_appointments");
                });

            modelBuilder.Entity("RandevuTakip.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("UserGuidId");

                    b.HasKey("Id");

                    b.ToTable("tbl_departments");
                });

            modelBuilder.Entity("RandevuTakip.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("UserGuidId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("tbl_doctors");
                });

            modelBuilder.Entity("RandevuTakip.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("IdentityNo");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Surname");

                    b.Property<string>("UserGuidId");

                    b.HasKey("Id");

                    b.ToTable("tbl_patients");
                });

            modelBuilder.Entity("RandevuTakip.Entities.Appointment", b =>
                {
                    b.HasOne("RandevuTakip.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("RandevuTakip.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("RandevuTakip.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("RandevuTakip.Entities.Doctor", b =>
                {
                    b.HasOne("RandevuTakip.Entities.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
